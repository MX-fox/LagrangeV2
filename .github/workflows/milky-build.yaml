name: Build Lagrange.Milky

on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/milky-build.yaml
      - Lagrange.Codec/**
      - Lagrange.Core/**
      - Lagrange.Proto/**
      - Lagrange.Proto.Generator/**
      - Lagrange.Milky/**
      - docker-compose.yml
  pull_request:
    branches: [ main ]
    paths:
      - .github/workflows/milky-build.yaml
      - Lagrange.Codec/**
      - Lagrange.Core/**
      - Lagrange.Proto/**
      - Lagrange.Proto.Generator/**
      - Lagrange.Milky/**
      - docker-compose.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
            binary-extension: '.exe'
          - os: macos-latest
            rid: osx-arm64
            binary-extension: ''
          - os: ubuntu-latest
            rid: linux-x64
            binary-extension: ''
    
    env:
      RUNTIME_IDENTIFIER: ${{ matrix.rid }}

    steps:
      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y clang zlib1g-dev

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish
        run: dotnet publish Lagrange.Milky -c Release -r ${{ matrix.rid }}

      - if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: Lagrange.Milky-${{ matrix.rid }}
          path: Lagrange.Milky/bin/Release/net9.0/${{ matrix.rid }}/publish/Lagrange.Milky${{ matrix.binary-extension }}
      - if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: Lagrange.Milky-${{ matrix.rid }}-symbol-files
          path: |
            Lagrange.Milky/bin/Release/net9.0/${{ matrix.rid }}/publish/*
            !Lagrange.Milky/bin/Release/net9.0/${{ matrix.rid }}/publish/Lagrange.Milky${{ matrix.binary-extension }}

  docker:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/lagrange-milky
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Lagrange.Milky/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
